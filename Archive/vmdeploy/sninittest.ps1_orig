#========================================================================
# Created with: SAPIEN Technologies, Inc., PowerShell Studio 2012 v3.1.13
# Created on:   1/7/2015 12:56 PM
# Created by:   
# Organization: Maritz, LLC
# Filename:     
#========================================================================

Param
(
[Parameter(Mandatory=$true)]
[string]$CIsysID,
[Parameter(Mandatory=$false)]
[string]$myVmname
)

#Get the current script file fully qualified path, name, and last update datetime so we can use it to pass to the logging mod
$CurrentScriptFilePath = $script:MyInvocation.MyCommand.Path
$CurrentScriptLastModifiedDateTime = (Get-Item $script:MyInvocation.MyCommand.Path).LastWriteTime

#importing logging module for centralized logging 
#logs under the autobuild category
#initially the logging will take place immediately after existing write-host remarks, eventually this will need to be cleaned up
Import-Module d:\Scripts\vmdeploy\LogEvent.psm1
#Import-Module .\logevent.psm1

#Local File Settings (if we are going to log locally)
$LocalLogFileName = ".\$env:ComputerName-logfile.txt"

#Windows EventViewer Settings (if we are going to log to the windows Event Viewer)
$LogName = "Application"
$LogSource = 'EventSystem'
########################################################################################################

$AppName = "AutoBuild"
$AppID = "54F789D3-29DE-4F86-9BAA-C396BF7967FB"
$ApiKey = "AD4D5552-A125-4C5D-8AD5-91C9457BFE5C"


function writelog {
	param($message)
	LogEvent -LocalLogFileName $LocalLogFileName -LocalLogFile $false -WebService $true -WindowsEventViewer $false -logname $LogName -logsource $logsource -MessageType "Notification" -Message $message -ScriptFilePath $CurrentScriptFilePath -ScriptFileLastModified $CurrentScriptLastModifiedDateTime -UrlType "Internal" -AppName $AppName -AppKey $AppKey -ApiKey $ApiKey
}

Function Get-ServiceNowTableHandle
{
   param($tableName)
   $duser = "s_snblddata"
   $enstr = Get-Content "d:\scripts\vmdeploy\test.cred"
   $pi = Get-Content "d:\scripts\vmdeploy\pi.key"
   #$enstr = Get-Content "test.cred"
   #$pi = Get-Content "pi.key"
   $SPass=Convertto-SecureString $enstr -key $pi
   $creds = New-Object System.Management.Automation.PSCredential $duser,$spass
   #if(!$credentials){$credentials = Get-Credential}
   #$URI = "$serviceNowURL$tableName.do?WSDL"
   $URI = "https://maritzdev.service-now.com/cmdb_ci_server.do?WSDL"
   $SNWSProxy = New-WebServiceProxy -uri $URI -Credential $creds
   return $SNWSProxy
}


Function Get-ServiceNowRecordByKey
{

     param($RecordKey,$tableName)

     $Proxy = Get-ServiceNowTableHandle -tableName $tableName
     $type = $Proxy.getType().Namespace
     $datatype = $type + '.getRecords'
     $property = New-Object $datatype
     $property.sys_id = $RecordKey
     $Proxy.getRecords($property)
}


writelog "initiating script based of SN kick off"
writelog "Already set logging variables and imported logging module"
writelog "Logging set to log to webservice only, local and event logging not enabled at this time."
writelog "Variable CIsysID set to: $CIsysId"
if($myVmname -ne $null -or $myVmname -ne ""){
writelog "Variable myVmname set to: $myVmname"
}

writelog "Looking up SN information for sysID: $CIsysID"
$sysidnfo = Get-ServiceNowRecordByKey -RecordKey $CIsysID -tableName "cmdb_ci_server_list"

writelog "Listing variables from SN"
writelog "Name: $sysidnfo.name"
writelog "Status: $sysidnfo.status"
writelog "IP: $sysidnfo.ip_address"
#writelog "Support Group:" $sysidnfo.support_group
#writelog "company:" $sysidnfo.company
#$snServerType = $sysidnfo.u_build_Role    #"Wap,Web,SQL,FTP,Print,DC,Other"
writelog "snServerType set to: $snServerType"
writelog "Domain: $sysidnfo.u_build_domain" # no direct mapping yet
writelog "OS Version: $sysidnfo.os_version"
writelog "CPU: $sysidnfo.u_build_cpu"
writelog "Ram: $sysidnfo.u_build_ram"

writelog "Drive C: $sysidnfo.u_build_c_drive" #$snCdrive = 40	#This should always stay 40
writelog "Drive D: $sysidnfo.u_build_d_drive" #$snDdrive = 18
writelog "Drive E: $sysidnfo.u_build_e_drive" #$snEdrive = 15
writelog "Drive F: $sysidnfo.u_build_f_drive" #$snFdrive = 15
writelog "Drive G: $sysidnfo.u_build_g_drive" #$snGdrive = 5
writelog "Drive H: $sysidnfo.u_build_h_drive" #$snHdrive = 3
writelog "Environment: $sysidnfo.u_Environment" #$snEnvironment = "Staging" 
writelog "Function: $sysidnfo.u_primary_function"


write-host "Listing variables from SN"
write-host "Name:" $sysidnfo.name 
write-host "Status:" $sysidnfo.status
write-host "IP:" $sysidnfo.ip_address
#$snServerType = $sysidnfo.u_build_Role    #"Wap,Web,SQL,FTP,Print,DC,Other"
write-host "snServerType set to:" $sysidnfo.u_build_role
#write-host "Support Group:" $sysidnfo.support_group
#write-host "company:" $sysidnfo.company
write-host "Domain:" $sysidnfo.u_build_domain # no direct mapping yet
write-host "OS Version:" $sysidnfo.os_version
write-host "CPU:" $sysidnfo.u_build_cpu
write-host "Ram:" $sysidnfo.u_build_ram

write-host "Drive C:" $sysidnfo.u_build_c_drive #$snCdrive = 40	#This should always stay 40
write-host "Drive D:" $sysidnfo.u_build_d_drive #$snDdrive = 18
write-host "Drive E:" $sysidnfo.u_build_e_drive #$snEdrive = 15
write-host "Drive F:" $sysidnfo.u_build_f_drive #$snFdrive = 15
write-host "Drive G:" $sysidnfo.u_build_g_drive #$snGdrive = 5
write-host "Drive H:" $sysidnfo.u_build_h_drive #$snHdrive = 3
write-host "Environment:" $sysidnfo.u_Environment #$snEnvironment = "Staging" 
write-host "Function:" $sysidnfo.u_primary_function

writelog "Script Terminiation."



